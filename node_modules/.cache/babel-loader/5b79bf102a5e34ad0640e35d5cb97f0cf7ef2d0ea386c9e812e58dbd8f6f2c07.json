{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Juan\\\\Desktop\\\\FRONTEND_PROYECTO\\\\boceto_1\\\\src\\\\context\\\\AuthContext.js\",\n  _s = $RefreshSig$();\n// src/context/AuthContext.js\nimport React, { createContext, useState, useEffect } from 'react';\nimport { login } from '../services/authService';\n\n// Crear el contexto\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext();\n\n// Componente AuthProvider\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  // Función para manejar el inicio de sesión\n  const loginUser = async (username, password) => {\n    try {\n      const userData = await login(username, password);\n      setUser(userData); // Guarda la información del usuario\n    } catch (error) {\n      console.error('Error al iniciar sesión:', error);\n    }\n  };\n\n  // Función para manejar el cierre de sesión\n  const logoutUser = () => {\n    setUser(null); // Elimina la información del usuario\n  };\n\n  // Verifica si ya hay un usuario autenticado cuando se carga la app\n  useEffect(() => {\n    const checkAuthStatus = () => {\n      // Aquí podrías verificar el estado del usuario, como por ejemplo un token en localStorage\n      const storedUser = localStorage.getItem('user'); // Esto es solo un ejemplo\n      if (storedUser) {\n        setUser(JSON.parse(storedUser));\n      }\n      setLoading(false);\n    };\n    checkAuthStatus();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      loginUser,\n      logoutUser,\n      loading\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"NiO5z6JIqzX62LS5UWDgIqbZYyY=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","login","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","user","setUser","loading","setLoading","loginUser","username","password","userData","error","console","logoutUser","checkAuthStatus","storedUser","localStorage","getItem","JSON","parse","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Juan/Desktop/FRONTEND_PROYECTO/boceto_1/src/context/AuthContext.js"],"sourcesContent":["// src/context/AuthContext.js\r\nimport React, { createContext, useState, useEffect } from 'react';\r\nimport { login } from '../services/authService';\r\n\r\n// Crear el contexto\r\nexport const AuthContext = createContext();\r\n\r\n// Componente AuthProvider\r\nexport const AuthProvider = ({ children }) => {\r\n  const [user, setUser] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  // Función para manejar el inicio de sesión\r\n  const loginUser = async (username, password) => {\r\n    try {\r\n      const userData = await login(username, password);\r\n      setUser(userData); // Guarda la información del usuario\r\n    } catch (error) {\r\n      console.error('Error al iniciar sesión:', error);\r\n    }\r\n  };\r\n\r\n  // Función para manejar el cierre de sesión\r\n  const logoutUser = () => {\r\n    setUser(null); // Elimina la información del usuario\r\n  };\r\n\r\n  // Verifica si ya hay un usuario autenticado cuando se carga la app\r\n  useEffect(() => {\r\n    const checkAuthStatus = () => {\r\n      // Aquí podrías verificar el estado del usuario, como por ejemplo un token en localStorage\r\n      const storedUser = localStorage.getItem('user'); // Esto es solo un ejemplo\r\n      if (storedUser) {\r\n        setUser(JSON.parse(storedUser));\r\n      }\r\n      setLoading(false);\r\n    };\r\n\r\n    checkAuthStatus();\r\n  }, []);\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ user, loginUser, logoutUser, loading }}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AACjE,SAASC,KAAK,QAAQ,yBAAyB;;AAE/C;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,OAAO,MAAMC,WAAW,gBAAGN,aAAa,CAAC,CAAC;;AAE1C;AACA,OAAO,MAAMO,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC5C,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACW,OAAO,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;;EAE5C;EACA,MAAMa,SAAS,GAAG,MAAAA,CAAOC,QAAQ,EAAEC,QAAQ,KAAK;IAC9C,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMd,KAAK,CAACY,QAAQ,EAAEC,QAAQ,CAAC;MAChDL,OAAO,CAACM,QAAQ,CAAC,CAAC,CAAC;IACrB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;IAClD;EACF,CAAC;;EAED;EACA,MAAME,UAAU,GAAGA,CAAA,KAAM;IACvBT,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC;EACjB,CAAC;;EAED;EACAT,SAAS,CAAC,MAAM;IACd,MAAMmB,eAAe,GAAGA,CAAA,KAAM;MAC5B;MACA,MAAMC,UAAU,GAAGC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC;MACjD,IAAIF,UAAU,EAAE;QACdX,OAAO,CAACc,IAAI,CAACC,KAAK,CAACJ,UAAU,CAAC,CAAC;MACjC;MACAT,UAAU,CAAC,KAAK,CAAC;IACnB,CAAC;IAEDQ,eAAe,CAAC,CAAC;EACnB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEhB,OAAA,CAACC,WAAW,CAACqB,QAAQ;IAACC,KAAK,EAAE;MAAElB,IAAI;MAAEI,SAAS;MAAEM,UAAU;MAAER;IAAQ,CAAE;IAAAJ,QAAA,EACnEA;EAAQ;IAAAqB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAACvB,EAAA,CAtCWF,YAAY;AAAA0B,EAAA,GAAZ1B,YAAY;AAAA,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}