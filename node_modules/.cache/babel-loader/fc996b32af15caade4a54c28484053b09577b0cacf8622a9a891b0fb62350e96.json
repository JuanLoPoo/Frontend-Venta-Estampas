{"ast":null,"code":"// src/services/authService.js\n\n//Esto es para el backend, por si acaso.\nexport const login = async (username, password) => {\n  try {\n    // Supongamos que tu backend tiene un endpoint /api/login\n    const response = await fetch('/api/login', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        username,\n        password\n      })\n    });\n    if (!response.ok) {\n      throw new Error('Credenciales inválidas');\n    }\n    const data = await response.json();\n    return data; // Retorna los datos del usuario, como el rol o token\n  } catch (error) {\n    throw error;\n  }\n};","map":{"version":3,"names":["login","username","password","response","fetch","method","headers","body","JSON","stringify","ok","Error","data","json","error"],"sources":["C:/Users/Juan/Desktop/FRONTEND_PROYECTO/boceto_1/src/services/authService.js"],"sourcesContent":["// src/services/authService.js\r\n\r\n//Esto es para el backend, por si acaso.\r\nexport const login = async (username, password) => {\r\n    try {\r\n      // Supongamos que tu backend tiene un endpoint /api/login\r\n      const response = await fetch('/api/login', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ username, password })\r\n      });\r\n  \r\n      if (!response.ok) {\r\n        throw new Error('Credenciales inválidas');\r\n      }\r\n  \r\n      const data = await response.json();\r\n      return data; // Retorna los datos del usuario, como el rol o token\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  };\r\n  "],"mappings":"AAAA;;AAEA;AACA,OAAO,MAAMA,KAAK,GAAG,MAAAA,CAAOC,QAAQ,EAAEC,QAAQ,KAAK;EAC/C,IAAI;IACF;IACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,YAAY,EAAE;MACzCC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QAAE,cAAc,EAAE;MAAmB,CAAC;MAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAER,QAAQ;QAAEC;MAAS,CAAC;IAC7C,CAAC,CAAC;IAEF,IAAI,CAACC,QAAQ,CAACO,EAAE,EAAE;MAChB,MAAM,IAAIC,KAAK,CAAC,wBAAwB,CAAC;IAC3C;IAEA,MAAMC,IAAI,GAAG,MAAMT,QAAQ,CAACU,IAAI,CAAC,CAAC;IAClC,OAAOD,IAAI,CAAC,CAAC;EACf,CAAC,CAAC,OAAOE,KAAK,EAAE;IACd,MAAMA,KAAK;EACb;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}