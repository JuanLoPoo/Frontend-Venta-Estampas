{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Juan\\\\Desktop\\\\FRONTEND_PROYECTO\\\\boceto_1\\\\src\\\\components\\\\EstampasPublicadas.js\",\n  _s = $RefreshSig$();\n// src/components/EstampasPublicadas.js\nimport React, { useState, useEffect } from 'react';\nimport './EstampasPublicadas.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EstampasPublicadas = () => {\n  _s();\n  const [estampas, setEstampas] = useState([]);\n\n  // Simulamos la carga de estampas (se simula si no hay estampas en el localStorage)\n  useEffect(() => {\n    const storedEstampas = JSON.parse(localStorage.getItem('estampas')) || [];\n\n    // Si no hay estampas en localStorage, agregamos algunas simuladas\n    if (storedEstampas.length === 0) {\n      const estampasSimuladas = [{\n        id: 1,\n        nombre: 'Estampa Aventura',\n        imagen: 'https://via.placeholder.com/250x250?text=Estampa+Aventura'\n      }, {\n        id: 2,\n        nombre: 'Estampa Mariposa',\n        imagen: 'https://via.placeholder.com/250x250?text=Estampa+Mariposa'\n      }, {\n        id: 3,\n        nombre: 'Estampa Paisaje',\n        imagen: 'https://via.placeholder.com/250x250?text=Estampa+Paisaje'\n      }];\n\n      // Guardamos las estampas simuladas en localStorage\n      localStorage.setItem('estampas', JSON.stringify(estampasSimuladas));\n      setEstampas(estampasSimuladas);\n    } else {\n      setEstampas(storedEstampas);\n    }\n  }, []);\n  const borrarEstampa = id => {\n    const nuevasEstampas = estampas.filter(estampa => estampa.id !== id);\n    setEstampas(nuevasEstampas);\n    localStorage.setItem('estampas', JSON.stringify(nuevasEstampas));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"estampas-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Estampas Publicadas\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"estampas-list\",\n      children: estampas.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No hay estampas publicadas.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this) : estampas.map(estampa => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"estampa-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: estampa.imagen,\n          alt: estampa.nombre,\n          className: \"estampa-img\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"estampa-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: estampa.nombre\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"borrar-btn\",\n            onClick: () => borrarEstampa(estampa.id),\n            children: \"Borrar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 15\n        }, this)]\n      }, estampa.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n_s(EstampasPublicadas, \"uQlOCcGs6CZ73nCrsVLCWfbaLnA=\");\n_c = EstampasPublicadas;\nexport default EstampasPublicadas;\nvar _c;\n$RefreshReg$(_c, \"EstampasPublicadas\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","EstampasPublicadas","_s","estampas","setEstampas","storedEstampas","JSON","parse","localStorage","getItem","length","estampasSimuladas","id","nombre","imagen","setItem","stringify","borrarEstampa","nuevasEstampas","filter","estampa","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","src","alt","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Juan/Desktop/FRONTEND_PROYECTO/boceto_1/src/components/EstampasPublicadas.js"],"sourcesContent":["// src/components/EstampasPublicadas.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport './EstampasPublicadas.css';\r\n\r\nconst EstampasPublicadas = () => {\r\n  const [estampas, setEstampas] = useState([]);\r\n\r\n  // Simulamos la carga de estampas (se simula si no hay estampas en el localStorage)\r\n  useEffect(() => {\r\n    const storedEstampas = JSON.parse(localStorage.getItem('estampas')) || [];\r\n\r\n    // Si no hay estampas en localStorage, agregamos algunas simuladas\r\n    if (storedEstampas.length === 0) {\r\n      const estampasSimuladas = [\r\n        {\r\n          id: 1,\r\n          nombre: 'Estampa Aventura',\r\n          imagen: 'https://via.placeholder.com/250x250?text=Estampa+Aventura',\r\n        },\r\n        {\r\n          id: 2,\r\n          nombre: 'Estampa Mariposa',\r\n          imagen: 'https://via.placeholder.com/250x250?text=Estampa+Mariposa',\r\n        },\r\n        {\r\n          id: 3,\r\n          nombre: 'Estampa Paisaje',\r\n          imagen: 'https://via.placeholder.com/250x250?text=Estampa+Paisaje',\r\n        },\r\n      ];\r\n\r\n      // Guardamos las estampas simuladas en localStorage\r\n      localStorage.setItem('estampas', JSON.stringify(estampasSimuladas));\r\n      setEstampas(estampasSimuladas);\r\n    } else {\r\n      setEstampas(storedEstampas);\r\n    }\r\n  }, []);\r\n\r\n  const borrarEstampa = (id) => {\r\n    const nuevasEstampas = estampas.filter((estampa) => estampa.id !== id);\r\n    setEstampas(nuevasEstampas);\r\n    localStorage.setItem('estampas', JSON.stringify(nuevasEstampas));\r\n  };\r\n\r\n  return (\r\n    <div className=\"estampas-container\">\r\n      <h2>Estampas Publicadas</h2>\r\n      <div className=\"estampas-list\">\r\n        {estampas.length === 0 ? (\r\n          <p>No hay estampas publicadas.</p>\r\n        ) : (\r\n          estampas.map((estampa) => (\r\n            <div key={estampa.id} className=\"estampa-card\">\r\n              <img src={estampa.imagen} alt={estampa.nombre} className=\"estampa-img\" />\r\n              <div className=\"estampa-info\">\r\n                <h3>{estampa.nombre}</h3>\r\n                <button className=\"borrar-btn\" onClick={() => borrarEstampa(estampa.id)}>\r\n                  Borrar\r\n                </button>\r\n              </div>\r\n            </div>\r\n          ))\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EstampasPublicadas;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}